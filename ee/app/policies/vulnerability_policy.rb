# frozen_string_literal: true

class VulnerabilityPolicy < BasePolicy
  delegate { @subject.project }

  # Only users who can read vulnerability can comment.
  # It would not be safe to prevent :create_note in project policy,
  # since note permissions are shared, and this can have ripple effect on other parts.
  rule { ~can?(:read_security_resource) }.prevent :create_note
  rule { can?(:read_security_resource) }.enable :read_vulnerability

  condition(:can_explain_vulnerability?, scope: :subject) do
    (Feature.enabled?(:openai_experimentation) || Feature.enabled?(:ai_global_switch, type: :ops)) &&
      Feature.enabled?(:explain_vulnerability, @subject&.project) &&
      ::Gitlab::Llm::StageCheck.available?(@subject&.project, :explain_vulnerability) &&
      @subject&.finding.present?
  end

  rule { can_explain_vulnerability? & can?(:read_security_resource) }.enable(:explain_vulnerability)
end
