- form = local_assigns.fetch(:form)

= render 'projects/settings/merge_requests/merge_request_merge_method_settings', project: @project, form: form

= render 'projects/settings/merge_requests/merge_request_merge_options_settings', project: @project, form: form

= render 'projects/settings/merge_requests/merge_request_squash_options_settings', form: form

= render 'projects/settings/merge_requests/merge_request_merge_checks_settings', project: @project, form: form

- if @project.licensed_feature_available?(:external_status_checks)
  = render_if_exists 'projects/settings/merge_requests/merge_request_status_checks_settings'

= render 'projects/settings/merge_requests/merge_request_merge_suggestions_settings', project: @project, form: form

= render 'projects/settings/merge_requests/merge_request_merge_commit_template', project: @project, form: form

= render 'projects/settings/merge_requests/merge_request_squash_commit_template', project: @project, form: form

- if @project.forked?
  = render 'projects/settings/merge_requests/merge_request_target_project_settings', project: @project, form: form

- if @project.feature_available?(:issuable_default_templates)
  .form-group
    %b= _('Default description template for merge requests')
    %p.text-secondary
      = s_('ProjectSettings|Used for every new merge request.')
      - link = link_to('', help_page_path('user/project/description_templates', anchor: 'create-a-merge-request-template'), target: '_blank', rel: 'noopener noreferrer')
      = safe_format(s_('ProjectSettings|%{link_start}What are description templates?%{link_end}'), tag_pair(link, :link_start, :link_end))

    = form.text_area :merge_requests_template, class: "form-control", rows: 3, data: { testid: 'default-merge-request-template-field' }

    .text-secondary
      - link = link_to('', help_page_path('user/markdown'), target: '_blank', rel: 'noopener noreferrer')
      = safe_format(_('Description parsed with %{link_start}GitLab Flavored Markdown%{link_end}'), tag_pair(link, :link_start, :link_end))
